### Introduction

Diglin_Ricardo source code is a PHP Library to get access to the Ricardo.ch API which is a .NET Webservice sending Json or SOAP requests.
With this library we handle only json requests as it is much more faster.

### How to start

## Install for custom framework

To start you have to include in your PHP include path, the folder of your library folder where you are going to install this library and then set the autoloader as the following:

```
set_include_path(get_include_path() . PATH_SEPARATOR . realpath(dirname(__DIR__) . '/src'));

require_once __DIR__ . '/src/SplAutoloader.php';
$autoload = new SplAutoloader(null, realpath(dirname(__DIR__) . '/src'));
$autoload->register();
```

## Install via Composer

```
 {
    "require" : {
        "diglin/ricardo": "*"
    },
    "repositories" : [
        {
            "type": "vcs",
            "url": "git@bitbucket.org:diglin/diglin_ricardo.git"
        }
    ]
 }
 ```

## Magento Composer Installer

 In your `composer.json` at Magento project level, you will have to set the following informations:

 ```
 {
    "require" : {
        "magento-hackathon/magento-composer-installer" : "*",
        "diglin/ricardo": "*"
    },
    "repositories" : [
		{
            "type" : "composer",
            "url" : "http://packages.firegento.com"
        },
        {
            "type": "vcs",
            "url": "git@bitbucket.org:diglin/diglin_ricardo.git"
        }
    ],
    "extra" : {
        "magento-root-dir" : "./"
    },
    "scripts": {
        "post-package-install": [
            "Diglin\\Ricardo\\Composer\\Magento::postPackageAction"
        ],
        "post-package-update": [
            "Diglin\\Ricardo\\Composer\\Magento::postPackageAction"
        ],
        "pre-package-uninstall": [
            "Diglin\\Ricardo\\Composer\\Magento::cleanPackageAction"
        ]
    }
 }
 ```
 
 ### How to use it
 
 TODO