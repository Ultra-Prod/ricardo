<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="/www-data/git/ricardo/src/Diglin/Ricardo/Services" file="Security.php" realpath="/www-data/git/ricardo/src/Diglin/Ricardo/Services/Security.php" size="8633" time="2015-02-05T12:57:19+01:00" unixtime="1423137439" sha1="ba619522c86331853d57e380187b970561d36ad8" relative="Diglin/Ricardo/Services/Security.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="3">
    <token name="T_DOC_COMMENT"> * Diglin GmbH - Switzerland</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * This file is part of a Diglin GmbH module.</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * This Diglin GmbH module is free software; you can redistribute it and/or</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * modify it under the terms of the GNU General Public License version 3 as</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> * published by the Free Software Foundation.</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> * This script is distributed in the hope that it will be useful, but WITHOUT</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT"> * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS</token>
  </line>
  <line no="13">
    <token name="T_DOC_COMMENT"> * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</token>
  </line>
  <line no="14">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="15">
    <token name="T_DOC_COMMENT"> * @author      Sylvain Ray&#xE9; &lt;support at diglin.com&gt;</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT"> * @category    Diglin</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT"> * @package     Diglin_Ricardo</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT"> * @copyright   Copyright (c) 2011-2015 Diglin (http://www.diglin.com)</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT"> * @license     http://opensource.org/licenses/gpl-3.0 GNU General Public License, version 3 (GPLv3)</token>
  </line>
  <line no="20">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="21">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Diglin</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Ricardo</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Services</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22"/>
  <line no="23">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT"> * Class Security</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT"> * Ricardo SecurityService API</token>
  </line>
  <line no="27">
    <token name="T_DOC_COMMENT"> * Manage Token generation</token>
  </line>
  <line no="28">
    <token name="T_DOC_COMMENT"> *</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT"> * @package Diglin\Ricardo\Services</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT"> * @link https://ws.ricardo.ch/RicardoApi/documentation/html/Methods_T_Ricardo_Contracts_ISecurityService.htm</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="32">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Security</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">ServiceAbstract</token>
  </line>
  <line no="33">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">    </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">VALIDATION_SAVE_PATH</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'/apiconnect/login/saveinfo/saveinfo'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="35"/>
  <line no="36">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">     * @var string</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$_service</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'SecurityService'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="40"/>
  <line no="41">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">     * @var string</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PROTECTED">protected</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$_typeOfToken</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TOKEN_TYPE_DEFAULT</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="45"/>
  <line no="46">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">     * Some Ricardo API Services don't need to have a registered token like</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">     * SystemService, ArticleService, SearchService, BrandingService</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">     * but they need an anonymous token</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getAnonymousTokenCredential</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="56">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'method'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GetAnonymousTokenCredential'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="57">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'params'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE">  </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'getAnonymousTokenCredentialParameter'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="60"/>
  <line no="61">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="62">
    <token name="T_DOC_COMMENT">     * Get the result fo the API call to get the anonymous token</token>
  </line>
  <line no="63">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="64">
    <token name="T_DOC_COMMENT">     * The Ricardo API returns:</token>
  </line>
  <line no="65">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">     * {</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">     *     "GetAnonymousTokenCredentialResult": {</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">     *      "TokenCredential": {</token>
  </line>
  <line no="69">
    <token name="T_DOC_COMMENT">     *       "SessionDuration":0,</token>
  </line>
  <line no="70">
    <token name="T_DOC_COMMENT">     *       "TokenCredentialKey":"[ANONYMOUS_TOKEN]",</token>
  </line>
  <line no="71">
    <token name="T_DOC_COMMENT">     *       "TokenExpirationDate":"\/Date(3453314340000+0200)\/"</token>
  </line>
  <line no="72">
    <token name="T_DOC_COMMENT">     *      }</token>
  </line>
  <line no="73">
    <token name="T_DOC_COMMENT">     *     }</token>
  </line>
  <line no="74">
    <token name="T_DOC_COMMENT">     *  }</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">     * Array returned:</token>
  </line>
  <line no="78">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="79">
    <token name="T_DOC_COMMENT">     * array(</token>
  </line>
  <line no="80">
    <token name="T_DOC_COMMENT">     *     'SessionDuration',</token>
  </line>
  <line no="81">
    <token name="T_DOC_COMMENT">     *     'TokenCredentialKey',</token>
  </line>
  <line no="82">
    <token name="T_DOC_COMMENT">     *     'TokenExpirationDate'</token>
  </line>
  <line no="83">
    <token name="T_DOC_COMMENT">     * );</token>
  </line>
  <line no="84">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="85">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="86">
    <token name="T_DOC_COMMENT">     * @param array $data</token>
  </line>
  <line no="87">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="88">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getAnonymousTokenCredentialResult</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GetAnonymousTokenCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GetAnonymousTokenCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TokenCredential'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="92">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GetAnonymousTokenCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TokenCredential'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="93">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="94"/>
  <line no="95">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="96">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="97"/>
  <line no="98">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="99">
    <token name="T_DOC_COMMENT">     * Ask for temporary credential for very first time use. Return a validationUrl where to redirect a user</token>
  </line>
  <line no="100">
    <token name="T_DOC_COMMENT">     * to autorize the application and Temporary Key.</token>
  </line>
  <line no="101">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="102">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="103">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="104">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getTemporaryCredential</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="105">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="106">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'method'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateTemporaryCredential'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="108">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'params'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'createTemporaryCredentialParameter'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="109">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="110">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="111"/>
  <line no="112">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="113">
    <token name="T_DOC_COMMENT">     * Get the result of the temporary credential.</token>
  </line>
  <line no="114">
    <token name="T_DOC_COMMENT">     * Take care here, the user will have to be redirected to validate it thanks to the validationUrl variable</token>
  </line>
  <line no="115">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="116">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="117">
    <token name="T_DOC_COMMENT">     * The Ricardo API returns:</token>
  </line>
  <line no="118">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="119">
    <token name="T_DOC_COMMENT">     * {</token>
  </line>
  <line no="120">
    <token name="T_DOC_COMMENT">     *     "CreateTemporaryCredentialResult": {</token>
  </line>
  <line no="121">
    <token name="T_DOC_COMMENT">     *       "TemporaryCredential": {</token>
  </line>
  <line no="122">
    <token name="T_DOC_COMMENT">     *         "ExpirationDate": "\/Date(1385462160000+0100)\/",</token>
  </line>
  <line no="123">
    <token name="T_DOC_COMMENT">     *         "TemporaryCredentialKey": "[TEMPORARY_TOKEN]",</token>
  </line>
  <line no="124">
    <token name="T_DOC_COMMENT">     *         "ValidationUrl": "http://www.ch.betaqxl.com/ApiConnect/Login/Index?token=XXXXX-XXXX-XXXX-XXXX-XXXXXXXXXX&amp;countryId=2&amp;partnershipId=XXXX&amp;partnerurl=http://www.myshop.com/mypage/"</token>
  </line>
  <line no="125">
    <token name="T_DOC_COMMENT">     *       }</token>
  </line>
  <line no="126">
    <token name="T_DOC_COMMENT">     *     }</token>
  </line>
  <line no="127">
    <token name="T_DOC_COMMENT">     *   }</token>
  </line>
  <line no="128">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="129">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="130">
    <token name="T_DOC_COMMENT">     * Array returned:</token>
  </line>
  <line no="131">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="132">
    <token name="T_DOC_COMMENT">     * array(</token>
  </line>
  <line no="133">
    <token name="T_DOC_COMMENT">     *     'ExpirationDate',</token>
  </line>
  <line no="134">
    <token name="T_DOC_COMMENT">     *     'TemporaryCredentialKey',</token>
  </line>
  <line no="135">
    <token name="T_DOC_COMMENT">     *     'ValidationUrl'</token>
  </line>
  <line no="136">
    <token name="T_DOC_COMMENT">     * );</token>
  </line>
  <line no="137">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="138">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="139">
    <token name="T_DOC_COMMENT">     * @param array $data</token>
  </line>
  <line no="140">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="141">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="142">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getTemporaryCredentialResult</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="143">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="144">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateTemporaryCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateTemporaryCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TemporaryCredential'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateTemporaryCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TemporaryCredential'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="147"/>
  <line no="148">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="150"/>
  <line no="151">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="152">
    <token name="T_DOC_COMMENT">     * Ask for the "real" token, providing the [TEMPORARY_TOKEN] received from the method createTemporaryCredential</token>
  </line>
  <line no="153">
    <token name="T_DOC_COMMENT">     * and also as a get parameter when user is returning from the validationURl.</token>
  </line>
  <line no="154">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="155">
    <token name="T_DOC_COMMENT">     * @param string $temporaryCredentialKey</token>
  </line>
  <line no="156">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="157">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="158">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getTokenCredential</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$temporaryCredentialKey</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="159">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'method'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateTokenCredential'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="162">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'params'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'createTokenCredentialParameter'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TemporaryCredentialKey'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$temporaryCredentialKey</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="164">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="165"/>
  <line no="166">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="167">
    <token name="T_DOC_COMMENT">     * Get the result of the token credential</token>
  </line>
  <line no="168">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="169">
    <token name="T_DOC_COMMENT">     * The Ricardo API returns:</token>
  </line>
  <line no="170">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="171">
    <token name="T_DOC_COMMENT">     * {</token>
  </line>
  <line no="172">
    <token name="T_DOC_COMMENT">     *     "CreateTokenCredentialResult": {</token>
  </line>
  <line no="173">
    <token name="T_DOC_COMMENT">     *       "TokenCredential": {</token>
  </line>
  <line no="174">
    <token name="T_DOC_COMMENT">     *         "SessionDuration": 30,</token>
  </line>
  <line no="175">
    <token name="T_DOC_COMMENT">     *         "TokenCredentialKey": "[REAL_TOKEN]",</token>
  </line>
  <line no="176">
    <token name="T_DOC_COMMENT">     *         "TokenExpirationDate": "\/Date(1386664920000+0100)\/"</token>
  </line>
  <line no="177">
    <token name="T_DOC_COMMENT">     *       }</token>
  </line>
  <line no="178">
    <token name="T_DOC_COMMENT">     *     }</token>
  </line>
  <line no="179">
    <token name="T_DOC_COMMENT">     *   }</token>
  </line>
  <line no="180">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="181">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="182">
    <token name="T_DOC_COMMENT">     * Array returned:</token>
  </line>
  <line no="183">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="184">
    <token name="T_DOC_COMMENT">     * array(</token>
  </line>
  <line no="185">
    <token name="T_DOC_COMMENT">     *     'SessionDuration',</token>
  </line>
  <line no="186">
    <token name="T_DOC_COMMENT">     *     'TokenCredentialKey',</token>
  </line>
  <line no="187">
    <token name="T_DOC_COMMENT">     *     'TokenExpirationDate'</token>
  </line>
  <line no="188">
    <token name="T_DOC_COMMENT">     * );</token>
  </line>
  <line no="189">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="190">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="191">
    <token name="T_DOC_COMMENT">     * @param array $data</token>
  </line>
  <line no="192">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="193">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="194">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getTokenCredentialResult</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="195">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="196">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateTokenCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateTokenCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TokenCredential'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="197">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateTokenCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TokenCredential'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="198">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="199"/>
  <line no="200">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="201">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="202"/>
  <line no="203">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="204">
    <token name="T_DOC_COMMENT">     * After the SessionDuration timeout, the token need to be refreshed</token>
  </line>
  <line no="205">
    <token name="T_DOC_COMMENT">     * You will get a new token credential in return. If TokenExpirationDate is above</token>
  </line>
  <line no="206">
    <token name="T_DOC_COMMENT">     * of the current date, you will have to create again a temporary credential (sic!)</token>
  </line>
  <line no="207">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="208">
    <token name="T_DOC_COMMENT">     * @param string $tokenCredentialKey</token>
  </line>
  <line no="209">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="210">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="211">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getRefreshTokenCredential</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokenCredentialKey</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="212">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="213">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="214">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'method'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RefreshTokenCredential'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="215">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'params'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'refreshTokenCredentialParameter'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TokenCredentialKey'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokenCredentialKey</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="216">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="217">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="218"/>
  <line no="219">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="220">
    <token name="T_DOC_COMMENT">     * Get the refreshed the token</token>
  </line>
  <line no="221">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="222">
    <token name="T_DOC_COMMENT">     * The Ricardo API returns:</token>
  </line>
  <line no="223">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="224">
    <token name="T_DOC_COMMENT">     * {</token>
  </line>
  <line no="225">
    <token name="T_DOC_COMMENT">     *     "RefreshTokenCredentialResult": {</token>
  </line>
  <line no="226">
    <token name="T_DOC_COMMENT">     *       "TokenCredential": {</token>
  </line>
  <line no="227">
    <token name="T_DOC_COMMENT">     *         "SessionDuration": 30,</token>
  </line>
  <line no="228">
    <token name="T_DOC_COMMENT">     *         "TokenCredentialKey": "[REAL_TOKEN]",</token>
  </line>
  <line no="229">
    <token name="T_DOC_COMMENT">     *         "TokenExpirationDate": "\/Date(1386664920000+0100)\/"</token>
  </line>
  <line no="230">
    <token name="T_DOC_COMMENT">     *       }</token>
  </line>
  <line no="231">
    <token name="T_DOC_COMMENT">     *     }</token>
  </line>
  <line no="232">
    <token name="T_DOC_COMMENT">     *   }</token>
  </line>
  <line no="233">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="234">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="235">
    <token name="T_DOC_COMMENT">     * Array returned:</token>
  </line>
  <line no="236">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="237">
    <token name="T_DOC_COMMENT">     * array(</token>
  </line>
  <line no="238">
    <token name="T_DOC_COMMENT">     *     'TokenCredentialKey'</token>
  </line>
  <line no="239">
    <token name="T_DOC_COMMENT">     * );</token>
  </line>
  <line no="240">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="241">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="242">
    <token name="T_DOC_COMMENT">     * @param array $data</token>
  </line>
  <line no="243">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="244">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="245">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getRefreshTokenCredentialResult</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="246">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="247">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RefreshTokenCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RefreshTokenCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TokenCredential'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="248">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'RefreshTokenCredentialResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'TokenCredential'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="249">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="250"/>
  <line no="251">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="252">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="253"/>
  <line no="254">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="255">
    <token name="T_DOC_COMMENT">     * Some API methods needs an antiforgery token to prevent Man-In-The-Middle attack</token>
  </line>
  <line no="256">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="257">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="258">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getAntiforgeryToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="260">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="261">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="262">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'method'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateAntiforgeryToken'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="263">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'params'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'createAntiforgeryTokenParameter'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="264">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="265">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="266"/>
  <line no="267">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="268">
    <token name="T_DOC_COMMENT">     * Get the antiforgery token</token>
  </line>
  <line no="269">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="270">
    <token name="T_DOC_COMMENT">     * The Ricardo API returns:</token>
  </line>
  <line no="271">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="272">
    <token name="T_DOC_COMMENT">     * {</token>
  </line>
  <line no="273">
    <token name="T_DOC_COMMENT">     *     "CreateAntiforgeryTokenResult": {</token>
  </line>
  <line no="274">
    <token name="T_DOC_COMMENT">     *         "AntiforgeryTokenKey": "[REAL_TOKEN]",</token>
  </line>
  <line no="275">
    <token name="T_DOC_COMMENT">     *         "TokenExpirationDate": "\/Date(1386664920000+0100)\/"</token>
  </line>
  <line no="276">
    <token name="T_DOC_COMMENT">     *     }</token>
  </line>
  <line no="277">
    <token name="T_DOC_COMMENT">     *   }</token>
  </line>
  <line no="278">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="279">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="280">
    <token name="T_DOC_COMMENT">     * Array returned:</token>
  </line>
  <line no="281">
    <token name="T_DOC_COMMENT">     * &lt;pre&gt;</token>
  </line>
  <line no="282">
    <token name="T_DOC_COMMENT">     * array(</token>
  </line>
  <line no="283">
    <token name="T_DOC_COMMENT">     *     'AntiforgeryTokenKey'</token>
  </line>
  <line no="284">
    <token name="T_DOC_COMMENT">     *     'TokenExpirationDate'</token>
  </line>
  <line no="285">
    <token name="T_DOC_COMMENT">     * );</token>
  </line>
  <line no="286">
    <token name="T_DOC_COMMENT">     * &lt;/pre&gt;</token>
  </line>
  <line no="287">
    <token name="T_DOC_COMMENT">     *</token>
  </line>
  <line no="288">
    <token name="T_DOC_COMMENT">     * @param array $data</token>
  </line>
  <line no="289">
    <token name="T_DOC_COMMENT">     * @return array</token>
  </line>
  <line no="290">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="291">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getAntiforgeryTokenResult</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ARRAY">array</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="292">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="293">
    <token name="T_WHITESPACE">        </token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_ISSET">isset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateAntiforgeryTokenResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="294">
    <token name="T_WHITESPACE">            </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$data</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'CreateAntiforgeryTokenResult'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="295">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="296"/>
  <line no="297">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="298">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="299">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="300"/>
</source>
