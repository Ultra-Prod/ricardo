<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src#" full="Zend_Config_Writer_Json" namespace="" name="Zend_Config_Writer_Json" abstract="false" final="false" start="38" end="106">
  <file path="/rissip/github/ricardo/src/Zend/Config/Writer" file="Json.php" realpath="/rissip/github/ricardo/src/Zend/Config/Writer/Json.php" size="3024" time="2014-12-16T11:05:52+01:00" unixtime="1418724352" sha1="212d39150a6c700f3c8e1954549ba950ebc9608b"/>
  <docblock>
    <description compact=""/>
    <category value="Zend"/>
    <package value="Zend_Config"/>
    <copyright value="Copyright (c) 2005-2009 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <extends full="Zend_Config_Writer_FileAbstract" namespace="" name="Zend_Config_Writer_FileAbstract"/>
  <member name="_prettyPrint" type="{unknown}" default="false" visibility="protected" line="45">
    <docblock>
      <description compact="If we need to pretty-print JSON data"/>
      <var type="boolean"/>
    </docblock>
  </member>
  <method name="prettyPrint" start="52" end="55" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get prettyPrint flag"/>
      <return description="prettyPrint flag" type="object">
        <type full="the" namespace="" name="the"/>
      </return>
    </docblock>
  </method>
  <method name="setPrettyPrint" start="63" end="67" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set prettyPrint flag"/>
      <param description="PrettyPrint flag" type="object" variable="$prettyPrint">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="object">
        <type full="Zend_Config_Writer_Json" namespace="" name="Zend_Config_Writer_Json"/>
      </return>
    </docblock>
    <parameter name="flag" byreference="false" type="{unknown}"/>
  </method>
  <method name="render" start="75" end="105" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Render a Zend_Config into a JSON config string."/>
      <since value="1.10"/>
      <return type="string"/>
    </docblock>
    <inline>
      <comment value="Ensure that each &quot;extends&quot; section actually exists" line="89"/>
      <comment value="Remove &quot;extends&quot; declaration if section does not exist" line="94"/>
    </inline>
  </method>
  <parent full="Zend_Config_Writer_FileAbstract" namepsace="" name="Zend_Config_Writer_FileAbstract">
    <extends full="Zend_Config_Writer" namespace="" name="Zend_Config_Writer"/>
    <member name="_filename" type="{unknown}" default="null" visibility="protected" line="40">
      <docblock>
        <description compact="Filename to write to"/>
        <var type="string"/>
      </docblock>
    </member>
    <member name="_exclusiveLock" type="{unknown}" default="false" visibility="protected" line="47">
      <docblock>
        <description compact="Wether to exclusively lock the file or not"/>
        <var type="boolean"/>
      </docblock>
    </member>
    <method name="setFilename" start="55" end="60" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the target filename"/>
        <param type="string" variable="$filename"/>
        <return type="object">
          <type full="Zend_Config_Writer_Array" namespace="" name="Zend_Config_Writer_Array"/>
        </return>
      </docblock>
      <parameter name="filename" byreference="false" type="{unknown}"/>
    </method>
    <method name="setExclusiveLock" start="68" end="73" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set wether to exclusively lock the file or not"/>
        <param type="boolean" variable="$exclusiveLock"/>
        <return type="object">
          <type full="Zend_Config_Writer_Array" namespace="" name="Zend_Config_Writer_Array"/>
        </return>
      </docblock>
      <parameter name="exclusiveLock" byreference="false" type="{unknown}"/>
    </method>
    <method name="write" start="83" end="121" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Write configuration to file."/>
        <param type="string" variable="$filename"/>
        <param type="object" variable="$config">
          <type full="Zend_Config" namespace="" name="Zend_Config"/>
        </param>
        <param type="object" variable="$exclusiveLock">
          <type full="bool" namespace="" name="bool"/>
        </param>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
      <parameter name="filename" byreference="false" type="{unknown}" default="null"/>
      <parameter name="config" byreference="false" type="object" default="null">
        <type full="\\Zend_Config" namespace="\" name="Zend_Config"/>
      </parameter>
      <parameter name="exclusiveLock" byreference="false" type="{unknown}" default="null"/>
    </method>
    <method name="render" start="130" end="133" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Render a Zend_Config into a config file string."/>
        <since value="1.10"/>
        <todo value="For 2.0 this should be redone into an abstract method."/>
        <return type="string"/>
      </docblock>
    </method>
  </parent>
  <parent full="Zend_Config_Writer" namepsace="" name="Zend_Config_Writer">
    <member name="_skipOptions" type="array" visibility="protected" line="35">
      <docblock>
        <description compact="Option keys to skip when calling setOptions()"/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="_config" type="{unknown}" default="null" visibility="protected" line="44">
      <docblock>
        <description compact="Config object to write"/>
        <var type="object">
          <type full="Zend_Config" namespace="" name="Zend_Config"/>
        </var>
      </docblock>
    </member>
    <constructor name="__construct" start="53" end="58" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Create a new adapter">$options can only be passed as array or be omitted</description>
        <param type="object" variable="$options">
          <type full="null|array" namespace="" name="null|array"/>
        </param>
      </docblock>
      <parameter name="options" byreference="false" type="array" default="null"/>
    </constructor>
    <method name="setConfig" start="66" end="71" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set options via a Zend_Config instance"/>
        <param type="object" variable="$config">
          <type full="Zend_Config" namespace="" name="Zend_Config"/>
        </param>
        <return type="object">
          <type full="Zend_Config_Writer" namespace="" name="Zend_Config_Writer"/>
        </return>
      </docblock>
      <parameter name="config" byreference="false" type="object">
        <type full="\\Zend_Config" namespace="\" name="Zend_Config"/>
      </parameter>
    </method>
    <method name="setOptions" start="79" end="93" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set options via an array"/>
        <param type="array" variable="$options"/>
        <return type="object">
          <type full="Zend_Config_Writer" namespace="" name="Zend_Config_Writer"/>
        </return>
      </docblock>
      <parameter name="options" byreference="false" type="array"/>
    </method>
    <method name="write" start="100" end="100" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Write a Zend_Config object to it's target"/>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
    </method>
  </parent>
</class>
