<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Exception" namespace="" name="Exception">
  <member name="message" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception message"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="code" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The exception code"/>
      <var type="int"/>
    </docblock>
  </member>
  <member name="file" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The filename where the exception was created"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="line" static="false" visibility="protected">
    <default>null</default>
    <docblock>
      <description compact="The line where the exception was created"/>
      <var type="int"/>
    </docblock>
  </member>
  <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct the exception"/>
      <return type="void"/>
    </docblock>
    <parameter name="message" optional="true" byreference="false" type="string"/>
    <parameter name="code" optional="true" byreference="false" type="int"/>
    <parameter name="previous" optional="true" byreference="false" type="object" class="Exception"/>
  </constructor>
  <method name="getMessage" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception message"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getPrevious" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Returns previous Exception"/>
      <return type="Exception"/>
    </docblock>
  </method>
  <method name="getCode" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the Exception code"/>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="getFile" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the file in which the exception occurred"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getLine" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the line in which the exception occurred"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="getTrace" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace"/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="getTraceAsString" abstract="false" static="false" visibility="public" final="true">
    <docblock>
      <description compact="Gets the stack trace as a string"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="__toString" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="String representation of the exception"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="__clone" abstract="false" static="false" final="true">
    <docblock>
      <description compact="Clone the exception"/>
      <return type="void"/>
    </docblock>
  </method>
<extenders><extender full="Diglin\Ricardo\Exceptions\ArticleException" namespace="Diglin\Ricardo\Exceptions" name="ArticleException"/><extender full="Diglin\Ricardo\Exceptions\CurlException" namespace="Diglin\Ricardo\Exceptions" name="CurlException"/><extender full="Diglin\Ricardo\Exceptions\CustomerException" namespace="Diglin\Ricardo\Exceptions" name="CustomerException"/><extender full="Diglin\Ricardo\Exceptions\ExceptionAbstract" namespace="Diglin\Ricardo\Exceptions" name="ExceptionAbstract"/><extender full="Diglin\Ricardo\Exceptions\GeneralException" namespace="Diglin\Ricardo\Exceptions" name="GeneralException"/><extender full="Diglin\Ricardo\Exceptions\PictureException" namespace="Diglin\Ricardo\Exceptions" name="PictureException"/><extender full="Diglin\Ricardo\Exceptions\SearchException" namespace="Diglin\Ricardo\Exceptions" name="SearchException"/><extender full="Diglin\Ricardo\Exceptions\SecurityException" namespace="Diglin\Ricardo\Exceptions" name="SecurityException"/><extender full="Diglin\Ricardo\Exceptions\TechnicalException" namespace="Diglin\Ricardo\Exceptions" name="TechnicalException"/></extenders></class>
